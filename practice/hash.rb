h = Hash.new('hello')
a = h[:foo]
b = h[:bar]

# 変数aと変数bは同一オブジェクト
a.equal?(b)

# 変数aに破壊的な変更を適用すると、変数bの値も一緒に変わってしまう
a.upcase!
a #=> "HELLO"
b #=> "HELLO"

# ちなみにハッシュ自身はからのまま
h #=> {}

# 破壊的問題解決
# キーが見つからないとブロックがその都度実行され、ブロックの戻り値が初期値になる
h = Hash.new {'hello'}
a = h[:foo]
b = h[:bar]

# 変数aと変数bは異なるオブジェクト（ブロックの実行時に毎回新しい文字列が作成される）
a.equal?(b)

# 変数aに破壊的な変更を適用しても、変数bの値は変わらない
a.upcase!
a #=> "HELLO"
b #=> "hello"

# ハッシュはからのまま
